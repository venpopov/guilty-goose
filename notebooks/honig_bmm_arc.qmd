---
title: "Correlations: bmm vs arc-width"
format: html
author: "Ven Popov"
---


```{r setup, warning=FALSE, message=FALSE}
library(tidyverse)
library(targets)
```

Read the data and the model fit:

```{r}
tar_load("honig_data")
tar_load("honig_bmm_fit_by_subject_and_session")
tar_load("honig_bmm_fit_kappa_by_subject_c_by_session")
tar_source()
fit1 <- honig_bmm_fit_by_subject_and_session
fit2 <- honig_bmm_fit_kappa_by_subject_c_by_session
```

Calculate the arc-width per subject and session:

```{r}
arc_width <- honig_data |> 
  group_by(subject, session) |> 
  summarize(arc_med = median(arc),
            arc_mean = mean(arc))
```

### Correlations with model 1

It used the following formula:

```{r}
fit1$bmm$user_formula
```

Extract the bmm parameters for each subject and session:

```{r}
bmm_params <- fit1 |> 
  get_subject_parameters() |>
  rownames_to_column("subject") |>
  pivot_longer(
    cols = -subject, 
    names_to = c(".value", "session"), 
    names_pattern = "(.*)_(.*)"
  ) |> 
  mutate(session = stringr::str_remove(session, "session"),
         session = as.numeric(session))
```

Merge the arc-width and bmm parameters:

```{r}
results <- arc_width |> 
  left_join(bmm_params, by = c("subject", "session"))
head(results)
```

Plot the correlations:

```{r}
results |>
  ggplot(aes(arc_mean, c, color = as.factor(subject))) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "arc-width (mean)", y = "c (bmm parameter)")


results |>
  ggplot(aes(arc_mean, kappa, color = as.factor(subject))) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "arc-width (mean)", y = "kappa (bmm parameter)")

results |>
  ggplot(aes(c, kappa, color = as.factor(subject))) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "c (bmm parameter)", y = "kappa (bmm parameter)")
```

Correlations:

```{r}
cor(results$arc_mean, results$c)
cor(results$arc_mean, results$kappa)
cor(results$c, results$kappa)
```

R squared:

```{r}
summary(lm(arc_mean ~ c, data = results))
summary(lm(arc_mean ~ kappa, data = results))
summary(lm(arc_mean ~ c + kappa, data = results))
```


### Correlations with model 2

It used the following formula:

```{r}
fit2$bmm$user_formula
```

Extract the bmm parameters for each subject and session:

```{r}
bmm_params2 <- fit2 |> 
  get_subject_parameters() |>
  rownames_to_column("subject") |>
  pivot_longer(
    cols = starts_with("c"),, 
    names_to = c(".value", "session"), 
    names_pattern = "(.*)_(.*)"
  ) |> 
  mutate(session = stringr::str_remove(session, "session"),
         session = as.numeric(session))  |> 
  rename(kappa = kappa_Intercept)
```

Merge the arc-width and bmm parameters:

```{r}
results2 <- arc_width |> 
  left_join(bmm_params2, by = c("subject", "session"))
head(results2)
```

Plot the correlations:

```{r}
results2 |>
  ggplot(aes(arc_mean, c, color = as.factor(subject))) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "arc-width (mean)", y = "c (bmm parameter)")


results2 |>
  ggplot(aes(arc_mean, kappa, color = as.factor(subject))) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "arc-width (mean)", y = "kappa (bmm parameter)")

results2 |>
  ggplot(aes(c, kappa, color = as.factor(subject))) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "c (bmm parameter)", y = "kappa (bmm parameter)")
```

Correlations:

```{r}
cor(results2$arc_mean, results2$c)
cor(results2$arc_mean, results2$kappa)
cor(results2$c, results2$kappa)
```

R squared:

```{r}
summary(lm(arc_mean ~ c, data = results2))
summary(lm(arc_mean ~ kappa, data = results2))
summary(lm(arc_mean ~ c + kappa, data = results2))
```